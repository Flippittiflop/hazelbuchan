version: 0.2

env:
  variables:
    NODE_ENV: production
  parameter-store:
    NEXT_PUBLIC_GA_MEASUREMENT_ID: /CodeBuild/hbdesign/${ENV}/ga_measurement_id
    AWS_S3_BUCKET: /CodeBuild/hbdesign/${ENV}/s3_bucket
    CLOUDFRONT_DISTRIBUTION_ID: /CodeBuild/hbdesign/${ENV}/cloudfront_id
    GITHUB_TOKEN: /hbdesign/github_token
    GALLERY_BUCKET_NAME: /CodeBuild/hbdesign/${ENV}/gallery_bucket
phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - npm ci

  pre_build:
    commands:
      # Create environment file
      - echo "Starting pre_build phase..."
      - echo "Creating .env.production file..."
      - |
        cat << EOF > .env.production
        NEXT_PUBLIC_GA_MEASUREMENT_ID=${NEXT_PUBLIC_GA_MEASUREMENT_ID}
        EOF
        export GALLERY_BUCKET_NAME=${GALLERY_BUCKET_NAME}
      - npm run sync-gallery -- featured gallery
#      # Sync gallery images
#      - npm run sync-gallery -- hero gallery
#      - npm run sync-gallery -- events-decor gallery
#      - npm run sync-gallery -- illustration gallery
#      - npm run sync-gallery -- paper-sculpture gallery
#      # Sync product images
#      - npm run sync-gallery -- flower-rentals products

  build:
    commands:
      - echo "Building the application..."
      - npm run build

  post_build:
    commands:
      # Upload to S3
      - aws s3 sync out/ s3://${AWS_S3_BUCKET}/ --delete
      # Invalidate CloudFront cache
      # Invalidate CloudFront cache only if ENV is not DEV
      - |
        if [ "$ENV" != "DEV" ]; then
          aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DISTRIBUTION_ID} --paths "/*"
        else
          echo "Skipping CloudFront invalidation in DEV environment"
        fi

artifacts:
  base-directory: out
  files:
    - '**/*'

cache:
  paths:
    - 'node_modules/**/*'
    - '.next/cache/**/*'
